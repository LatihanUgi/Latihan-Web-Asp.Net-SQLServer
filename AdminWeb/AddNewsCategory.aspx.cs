using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data.SqlClient;
using System.Data;
using System.Web.Configuration;
using System.Text;

public partial class AdminWeb_AddNewsCategory : System.Web.UI.Page
{
    private SqlConnection koneksi;
    protected void Page_Load(object sender, EventArgs e)
    {
        string strConn = WebConfigurationManager.ConnectionStrings["berita"].ConnectionString;
        koneksi = new SqlConnection(strConn);
        KatBeritaID();
        displaykat();
        if (Session["Id"] == "1" && Session["Username"] != "")
        {
            User.Text += Session["Username"];
        }
        else
        {
            Session.RemoveAll();
            Response.Redirect("Login.aspx");
        }

        //if (!IsPostBack)
        //{
        //    Response.Cache.SetCacheability(HttpCacheability.NoCache);
        //    Response.Cache.SetExpires(DateTime.Now.AddSeconds(-1));
        //    Response.Cache.SetNoStore();
        //}

        Response.Cache.SetNoStore();
        Response.Cache.SetCacheability(HttpCacheability.NoCache);
    }

    public void displaykat()
    {

            //Building an HTML string.
            StringBuilder html = new StringBuilder();

            //Table start.
            html.Append("<table class='table table-bordered'>");

            html.Append("<tr>");
            html.Append("<th>ID Category</th>");
            html.Append("<th>News Category</th>");
            html.Append("</tr>");

           
            //Building the Data rows.

            koneksi.Open();
            string sql = "select * from Kategori order by ID_Kategori desc";
            SqlCommand sqlcon = new SqlCommand(sql, koneksi);
            using (koneksi)
            {
                SqlDataReader dr = sqlcon.ExecuteReader();
                while (dr.Read())
                {
                    html.Append("<tr>");
                    html.Append("<td>" + dr.GetString(0) + "</td>");
                    html.Append("<td>" + dr.GetString(1) + "</td>");
                    html.Append("</tr>");
                }
            }


            //Table end.
            html.Append("</table>");

            //Append the HTML string to Placeholder.
            Datacat.Controls.Add(new Literal { Text = html.ToString() });
            koneksi.Close();
    }

    private void KatBeritaID()
    {
        AutoGeneratedID auto = new AutoGeneratedID();
        string idk = auto.AutoGenerateIDCat();
        txtid.Text = idk;
    }

    protected void simpanKat_Click(object sender, EventArgs e)
    {
        try
        {
            //string kat,strid;
            //int id = 0;

            //kat = txtKat.Text;
            ////sampai disini buat sendiri validasinya ya
            //strid = txtid.Text;

            ////jika strid kosong berarti form dalam kondisi untuk menginsert, jika ada isinya maka dalam kondisi mengupdate
            //if (strid.Length > 0)
            //{
            //    id = int.Parse(strid);
            //}


            //bool isSukses = this.insertKat(id, kat);

            //simpanKat.Text = "Simpan";
            //fillgvKat();
            //if (isSukses == true)
            //{
            //    txtError.Text = "Sukses Menyimpan Data";
            //    //bersihkan form
            //    txtKat.Text = string.Empty;
            //    txtid.Value = string.Empty;

            //}
            //else
            //{
            //    txtError.Text = "Gagal Menyimpan Data";
            //}

            crud smpn = new crud();
            smpn.simpan(txtid.Text, txtKat.Text);
            Response.Write("<script>alert('Data Success Added');</script>");
            Response.Redirect("AddNewsCategory.aspx");


        }
        catch (Exception ex)
        {

            txtError.Text = ex.Message;
        }

    }
    protected void txtid_TextChanged(object sender, EventArgs e)
    {
        KatBeritaID();
    }

    //private DataTable GetData()
    //{
    //    koneksi.Open();
    //    using (koneksi)
    //    {
    //        using (SqlCommand cmd = new SqlCommand("SELECT * FROM Kategori order by ID_Kategori Desc"))
    //        {
    //            using (SqlDataAdapter sda = new SqlDataAdapter())
    //            {
    //                cmd.Connection = koneksi;
    //                sda.SelectCommand = cmd;
    //                using (DataTable dt = new DataTable())
    //                {
    //                    sda.Fill(dt);
    //                    return dt;
    //                }
    //            }
    //        }
    //    }
    //}
}